<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asu.entity.StudentMapper">

	<!-- 增加学生 -->
	<insert id="addStu" parameterType="com.asu.entity.Student"
		useGeneratedKeys="true" keyProperty="Sno">
		insert into student(sname ,sex,
		age) values(#{sname},#{sex},#{age})
	</insert>

	<!-- 删除学生 -->
	<delete id="deleteStu" parameterType="int">
		delete from student where
		sno=#{sno}
	</delete>

	<!-- 修改学生 -->
	<update id="updateStu" parameterType="com.asu.entity.Student">
		update student set
		sname=#{sname} where sno=#{sno}
	</update>

	<!-- 查询单个学生 -->
	<select id="selectStuBySno" resultType="com.asu.entity.Student">
		select sname from student
		where sno = #{sno}
	</select>

	<!-- 查询所有学生 -->
	<select id="selectAllStu" resultType="com.asu.entity.Student">
		select * from student
	</select>

	<!-- 根据名字进行模糊查詢 -->
	<select id="selectBySname" resultType="com.asu.entity.Student"
		parameterType="String">
		select * from student where sname like
		concat('%',#{sname},'%')
	</select>

	<!--根据学生编号查询单个学生 -测试属性名和列名不一致出现的问题 -->
	<select id="testSelectStuByResultMap"
		resultType="com.asu.entity.Student">
		select * from
		student
		where sno = #{sno}
	</select>

	<!--声明了一个ResultMap
	   1.全局定义，方便重用；
	   2.解决属性名和列名不一致问题；
	   3.有利于从多个表得到自定义所需要的数据。 -->
	<resultMap type="com.asu.entity.Student" id="stuResultMap">
		<result property="picPath" column="pic_path" />
	</resultMap>

	<!--根据学生编号查询单个学生 -解决属性名和列名不一致出现问题 方案1-通过ResultMap进行映射 -->
	<select id="selectStuByResultMap" resultMap="stuResultMap">
		select * from
		student
		where sno = #{sno}
	</select>

	<!--根据学生编号查询单个学生 -解决属性名和列名不一致出现问题 方案2-通过as关键字 -->
	<select id="selectStuByAs" resultType="com.asu.entity.Student">
		select pic_path as
		picPath,sname from
		student
		where sno = #{sno}
	</select>
</mapper>